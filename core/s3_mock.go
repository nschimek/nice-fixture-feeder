// Code generated by mockery v2.28.0. DO NOT EDIT.

package core

import mock "github.com/stretchr/testify/mock"

// MockS3Client is an autogenerated mock type for the S3Client type
type MockS3Client struct {
	mock.Mock
}

// Exists provides a mock function with given fields: bucket, key
func (_m *MockS3Client) Exists(bucket string, key string) (bool, error) {
	ret := _m.Called(bucket, key)

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (bool, error)); ok {
		return rf(bucket, key)
	}
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(bucket, key)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(bucket, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Upload provides a mock function with given fields: data, bucket, key
func (_m *MockS3Client) Upload(data []byte, bucket string, key string) error {
	ret := _m.Called(data, bucket, key)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, string, string) error); ok {
		r0 = rf(data, bucket, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockS3Client interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockS3Client creates a new instance of MockS3Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockS3Client(t mockConstructorTestingTNewMockS3Client) *MockS3Client {
	mock := &MockS3Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
