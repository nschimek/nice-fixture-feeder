// Code generated by mockery v2.28.0. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// MockImageService is an autogenerated mock type for the ImageService type
type MockImageService struct {
	mock.Mock
}

type MockImageService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockImageService) EXPECT() *MockImageService_Expecter {
	return &MockImageService_Expecter{mock: &_m.Mock}
}

// TransferURL provides a mock function with given fields: url, bucket, keyFormat
func (_m *MockImageService) TransferURL(url string, bucket string, keyFormat string) bool {
	ret := _m.Called(url, bucket, keyFormat)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string, string) bool); ok {
		r0 = rf(url, bucket, keyFormat)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockImageService_TransferURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TransferURL'
type MockImageService_TransferURL_Call struct {
	*mock.Call
}

// TransferURL is a helper method to define mock.On call
//   - url string
//   - bucket string
//   - keyFormat string
func (_e *MockImageService_Expecter) TransferURL(url interface{}, bucket interface{}, keyFormat interface{}) *MockImageService_TransferURL_Call {
	return &MockImageService_TransferURL_Call{Call: _e.mock.On("TransferURL", url, bucket, keyFormat)}
}

func (_c *MockImageService_TransferURL_Call) Run(run func(url string, bucket string, keyFormat string)) *MockImageService_TransferURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockImageService_TransferURL_Call) Return(_a0 bool) *MockImageService_TransferURL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockImageService_TransferURL_Call) RunAndReturn(run func(string, string, string) bool) *MockImageService_TransferURL_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockImageService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockImageService creates a new instance of MockImageService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockImageService(t mockConstructorTestingTNewMockImageService) *MockImageService {
	mock := &MockImageService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
