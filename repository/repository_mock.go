// Code generated by mockery v2.28.0. DO NOT EDIT.

package repository

import mock "github.com/stretchr/testify/mock"

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository[T interface{}] struct {
	mock.Mock
}

// Upsert provides a mock function with given fields: _a0
func (_m *MockRepository[T]) Upsert(_a0 []T) *ResultStats {
	ret := _m.Called(_a0)

	var r0 *ResultStats
	if rf, ok := ret.Get(0).(func([]T) *ResultStats); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ResultStats)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRepository creates a new instance of MockRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRepository[T interface{}](t mockConstructorTestingTNewMockRepository) *MockRepository[T] {
	mock := &MockRepository[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
