// Code generated by mockery v2.28.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// League is an autogenerated mock type for the League type
type League struct {
	mock.Mock
}

type League_Expecter struct {
	mock *mock.Mock
}

func (_m *League) EXPECT() *League_Expecter {
	return &League_Expecter{mock: &_m.Mock}
}

// Persist provides a mock function with given fields:
func (_m *League) Persist() {
	_m.Called()
}

// League_Persist_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Persist'
type League_Persist_Call struct {
	*mock.Call
}

// Persist is a helper method to define mock.On call
func (_e *League_Expecter) Persist() *League_Persist_Call {
	return &League_Persist_Call{Call: _e.mock.On("Persist")}
}

func (_c *League_Persist_Call) Run(run func()) *League_Persist_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *League_Persist_Call) Return() *League_Persist_Call {
	_c.Call.Return()
	return _c
}

func (_c *League_Persist_Call) RunAndReturn(run func()) *League_Persist_Call {
	_c.Call.Return(run)
	return _c
}

// Request provides a mock function with given fields:
func (_m *League) Request() {
	_m.Called()
}

// League_Request_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Request'
type League_Request_Call struct {
	*mock.Call
}

// Request is a helper method to define mock.On call
func (_e *League_Expecter) Request() *League_Request_Call {
	return &League_Request_Call{Call: _e.mock.On("Request")}
}

func (_c *League_Request_Call) Run(run func()) *League_Request_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *League_Request_Call) Return() *League_Request_Call {
	_c.Call.Return()
	return _c
}

func (_c *League_Request_Call) RunAndReturn(run func()) *League_Request_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewLeague interface {
	mock.TestingT
	Cleanup(func())
}

// NewLeague creates a new instance of League. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLeague(t mockConstructorTestingTNewLeague) *League {
	mock := &League{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
